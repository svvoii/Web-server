#
## This is the example configuration file written in the NGINX config syntax.
## NGINX is a popular web server software that uses configuratuion files to
## define server settings, virtual hosts, and other server-related parameters.
##
## `Server` is a block that defines the server configuration.
##
## This example covers the following parameters:
## `listen` directive defines the port on which the server will listen for
## incoming connections.
##
## `server_name` directive defines the server or domain name for which the
## server configuration applies.
##
## `error_page` directive defines the default error page for the server.
##
## `client_max_body_size` directive defines the maximum size of the client
## request body.
##
## `location` block define different URL locations and their configurations.
## the `/` location block specifies the root directory for the file search,
## sets the default file to answer if the request is a directory (index.html),
## and turns on directory listing.
##
## The `/kapouet` location block defines a HTTP redirection to a new URL.
##
## The `/cgi-bin` location block defines the directory for CGI scripts and
## executes PHP CGI scripts (fastcgi_pass).
##
## The `/upload` location block defines the directory to save uploaded files,
## configures where uploaded files should be saved, and sets the buffer size
## for uploaded files.
##
## The `/` location block defines a proxy pass to the backend server, allowing
## it to work with POST and GET methods, and sets the headers for the proxy.
#

server {
	listen 80;  # Choose the port
	server_name example.com;  # Setup the server_names

	error_page 404 /404.html;  # Setup default error pages

	client_max_body_size 10M;  # Limit client body size

	location / {
		root /var/www/html;  # Define the root directory for file search
		index index.html;  # Set a default file to answer if the request is a directory
		autoindex on;  # Turn on directory listing
	}

	location /kapouet {
		return 301 http://example.com/new-url;  # Define a HTTP redirection
	}

	location /cgi-bin {
		alias /var/www/cgi-bin;  # Define the directory for CGI scripts
		include fastcgi_params;
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Execute PHP CGI
	}

	location /upload {
		alias /var/www/uploads;  # Define the directory to save uploaded files
		include fastcgi_params;
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Execute PHP CGI
		client_body_temp_path /var/www/uploads/temp;  # Configure where uploaded files should be saved
		client_body_in_file_only on;  # Save uploaded files to disk
		client_body_buffer_size 128K;  # Buffer size for uploaded files
	}

	location / {
		proxy_pass http://backend;  # Make it work with POST and GET methods
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	}
}
